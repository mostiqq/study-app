// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  password  String
  name      String    @unique()
  subjects  Subject[]
  variants  Variant[]
  tasks     Task[]
}

model Subject {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  goal      Int
  name      String
  maxTasks  Int       @map("max_tasks")
  user      User?     @relation(fields: [userId], references: [id])
  userId    Int?      @map("user_id")
  variants  Variant[]
  tasks     Task[]
}

model Variant {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  name      String
  result    Int
  user      User?    @relation(fields: [userId], references: [id])
  userId    Int?     @map("user_id")
  subject   Subject? @relation(fields: [subjectId], references: [id])
  subjectId Int?     @map("subject_id")
  tasks     Task[]
}

model Task {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  number    Int
  result    Int
  user      User?    @relation(fields: [userId], references: [id])
  userId    Int?     @map("user_id")
  subject   Subject? @relation(fields: [subjectId], references: [id])
  subjectId Int?     @map("subject_id")
  variant   Variant? @relation(fields: [variantId], references: [id])
  variantId Int?     @map("variant_id")
}
